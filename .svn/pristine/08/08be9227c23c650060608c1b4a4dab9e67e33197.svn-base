package com.dxsoft.houseApp.activity;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;

import com.dxsoft.houseApp.base.C;
import com.dxsoft.houseApp.base.HouseConfig;
import com.dxsoft.houseApp.data.HouseSharePreference;
import com.dxsoft.houseApp.entity.Parameter;
import com.dxsoft.houseApp.util.HttpHelper;
import com.dxsoft.houseApp.util.ViewUtil;
import com.example.houseapp.R;

public class MenuListActivity extends Activity {
	
	private ListView listView;
	private Integer usersid;
	private boolean flag=false;
	
	//初始化图片数组
	private int [] imgArry=new int[]{R.drawable.icon1,R.drawable.icon2,R.drawable.icon3,R.drawable.icon4,R.drawable.icon5,R.drawable.icon6};
	List<HashMap<String,Object>> list=new ArrayList<HashMap<String,Object>>();
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.menulist);
		
		initView();
		setListener();
	}
	private void initView() {
		listView=(ListView) this.findViewById(R.id.listView);
		usersid=Integer.valueOf(HouseSharePreference.getStringData(MenuListActivity.this,HouseConfig.KEY_USERSID));
		new MenuItemList().execute("1");
		
	}
	
	private void setListener() {
	}
	
	
	class MenuItemList extends AsyncTask<String, Void, String> {
		private Dialog mDialog;
		private String url = "";
		@Override
		protected String doInBackground(String... params) {
			Parameter queryEntity = new Parameter();
			queryEntity.setUserSid(Integer.valueOf(usersid));
			queryEntity.setpSid(HouseConfig.F_PSID);
			url = HttpHelper.getUrl(HouseConfig.METHOD_MENUITEMLIST, C.Url, queryEntity);
			return HttpHelper.getWebData(url);
			
		}
		@Override
		protected void onPostExecute(String result) {
			try {
				JSONObject success = new JSONObject(result);
				if(success.getBoolean("success")&&!success.getString("data").equals("[]")){
					if(mDialog!=null){
						mDialog.dismiss();
					}
					JSONArray jsonArray = success.getJSONArray("data");
					for(int i=0;i<jsonArray.length();i++){
						HashMap<String,Object> map=new HashMap<String,Object>();
						JSONObject jsonObject = jsonArray.getJSONObject(i);
						String sid = jsonObject.get("sid").toString();					
						String name = jsonObject.get("name").toString();
						map.put("img_menu_bef", imgArry[i]);
						map.put("id", sid);
						map.put("listName", name);
						map.put("img_menu_end", R.drawable.arrow);
						int sortId;
						try {
							sortId = jsonObject.getInt("sortId");
						} catch (JSONException e) {
							sortId = 999;
						}
						map.put("sortId", sortId);
						list.add(map);
					}
					Collections.sort(list, new Comparator<Map<String, Object>>() {

						@Override
						public int compare(Map<String, Object> a, Map<String, Object> b) {
							
							return (Integer) a.get("sortId") - (Integer) b.get("sortId");
						}
					});
					SimpleAdapter sa=new SimpleAdapter(MenuListActivity.this, list, R.layout.menuitem, new String[]{"img_menu_bef","listName","img_menu_end"}, new int[]{R.id.img_menu_bef,R.id.listName,R.id.img_menu_end});
					listView.setAdapter(sa);
					listView.setOnItemClickListener(new OnItemClickListener() {
						
						@Override
						public void onItemClick(AdapterView<?> arg0, View arg1,int arg2, long arg3) {
							String sid = list.get(arg2).get("id").toString();
							String listName = list.get(arg2).get("listName").toString();
							Intent intent = new Intent(MenuListActivity.this, MenuListDetailActivity.class);
							intent.putExtra(HouseConfig.KEY_USERSID, usersid);
							intent.putExtra(HouseConfig.KEY_ITEMID, sid);
							intent.putExtra(HouseConfig.KEY_TITLE, listName);
							MenuListActivity.this.startActivity(intent); 
							overridePendingTransition(R.anim.slide_right_in, R.anim.slide_left_out);
						}
					});;
				
				}else{
					if(mDialog!=null){
						mDialog.dismiss();
					}
					Toast.makeText(MenuListActivity.this, "获取数据失败", Toast.LENGTH_SHORT).show();
				}
			} catch (JSONException e) {
				if(mDialog!=null){
					mDialog.dismiss();
				}
				e.printStackTrace();
			}
			super.onPostExecute(result);
		}
		@Override
		protected void onPreExecute() {
			mDialog = ViewUtil.showWaitingView(MenuListActivity.this, "正在加载...");
			super.onPreExecute();
		}

	}
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if(keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0){
			if(flag){
				android.os.Process.killProcess(android.os.Process.myPid());
			}else{
				Toast.makeText(this, "再按一次将退出程序", Toast.LENGTH_SHORT).show();
				flag = true;
			}
		}
		return false;
	}
}

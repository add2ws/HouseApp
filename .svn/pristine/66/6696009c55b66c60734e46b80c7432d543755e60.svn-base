package com.dxsoft.houseApp.fragment;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONObject;

import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.SimpleAdapter;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

import com.dxsoft.houseApp.activity.ReportBasePreviewActivity;
import com.dxsoft.houseApp.base.C;
import com.dxsoft.houseApp.base.HouseConfig;
import com.dxsoft.houseApp.data.HouseSharePreference;
import com.dxsoft.houseApp.entity.Parameter;
import com.dxsoft.houseApp.util.HttpHelper;
import com.example.houseapp.R;


public class CreatedReportBaseFragment extends android.support.v4.app.Fragment {

	private final String TAG = this.getClass().getName();
	
	private ListView listView;
	private RelativeLayout progressBarLayout;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Log.i(TAG, "================>onCreate");
		
	}
	
	@Override
	public void onStart() {
		super.onStart();
		Log.i(TAG, "================>onStart");
	}
	
	@Override
	public void onResume() {
		super.onResume();
		Log.i(TAG, "================>onResume");
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		Log.i(TAG, "================>onCreateView");
		
		View rootView = inflater.inflate(R.layout.fragment_created_reportbase, container, false);
		listView = (ListView) rootView.findViewById(R.id.lv_my_reportbase);
		progressBarLayout = (RelativeLayout) rootView.findViewById(R.id.rl_loading);
		
		Parameter param = new Parameter();
		
		String userSid = HouseSharePreference.getStringData(this.getActivity(), HouseConfig.KEY_USERSID);
		if (!TextUtils.isEmpty(userSid)) {
			param.setUserSid(Integer.valueOf(userSid));
		}
		new FetchReportBase().execute(param);
		return rootView;
	}
	
	class FetchReportBase extends AsyncTask<Parameter, String, String> {
		
		@Override
		protected void onPreExecute() {
			super.onPreExecute();
		}
		
		@Override
		protected String doInBackground(Parameter... param) {
			String result = null;
			try {
				result = HttpHelper.requestData(HouseConfig.METHOD_MY_REPORTBASE, C.Url, param[0]);
			} catch (IOException e) {
				return null;
			}
			
			return result;
		}
		
		
		@Override
		protected void onPostExecute(String result) {
			ViewGroup vg = (ViewGroup) progressBarLayout.getParent();
			vg.removeView(progressBarLayout);
			
			
			if (TextUtils.isEmpty(result)) {
				Toast.makeText(CreatedReportBaseFragment.this.getActivity(), "服务器故障，请稍后再试", Toast.LENGTH_SHORT).show();
			}
			
			try {
				final List<Map<String, Object>> data = new ArrayList<Map<String,Object>>();
				
				JSONObject jObj = new JSONObject(result);
				JSONArray arry = jObj.getJSONArray("rows");
				for (int i = 0; i < arry.length(); i++) {
					JSONObject obj = arry.getJSONObject(i);
					Map<String, Object> map = new HashMap<String, Object>();
					map.put("sid", obj.get("sid"));
					map.put("name", obj.getString("name"));
					map.put("createTime", "创建时间：" + obj.getString("createTime"));
					data.add(map);
				}
				String[] fields = {"name", "createTime"};
				int[] resIds = {R.id.tv_name, R.id.tv_createtime};
				SimpleAdapter sa = new SimpleAdapter(CreatedReportBaseFragment.this.getActivity(), data, R.layout.view_reportbase_list_item, fields, resIds);
				listView.setAdapter(sa);
				listView.setOnItemClickListener(new OnItemClickListener() {

					@Override
					public void onItemClick(AdapterView<?> adapterView, View view, int position, long arg3) {
						int sid =  (Integer) data.get(position).get("sid");
						String name =  (String) data.get(position).get("name");
						Intent intent = new Intent(CreatedReportBaseFragment.this.getActivity(), ReportBasePreviewActivity.class);
						intent.putExtra("sid", sid);
						intent.putExtra("name", name);
						CreatedReportBaseFragment.this.getActivity().startActivity(intent);
						CreatedReportBaseFragment.this.getActivity().overridePendingTransition(R.anim.slide_right_in, R.anim.slide_left_out);
						
					}
				});
			} catch (Exception e) {
				Toast.makeText(CreatedReportBaseFragment.this.getActivity(), "服务器故障，请稍后再试\n" + e.getMessage(), Toast.LENGTH_SHORT).show();
			}
				
			super.onPostExecute(result);
		}
		
	}
	
}
